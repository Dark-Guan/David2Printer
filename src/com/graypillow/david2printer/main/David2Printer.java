/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.graypillow.david2printer.main;

import com.graypillow.david2printer.DavidScanner.David_3_10_4;
import com.graypillow.david2printer.DavidScanner.PropertyManage;
import com.graypillow.david2printer.SerialCom.SerialCom;
import com.graypillow.david2printer.SerialCom.managerSerial;
import com.graypillow.david2printer.util.messagePrinter;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.*;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Dark
 */
public class David2Printer extends javax.swing.JFrame {

    //管理David和Printer的转换协议
    public PropertyManage PM;

    //管理串口通讯
    private managerSerial manSerial;

    //单例的文本展示窗口
    private messagePrinter instance;

    /**
     * Creates new form mainFrame
     */
    public David2Printer() {

        initComponents();
        Toolkit myTK = Toolkit.getDefaultToolkit();
        //设置软件图标
        Image iconImage = myTK.createImage("app.png");
        this.setIconImage(iconImage);

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        //获得窗体大小
        int HEIGHT = super.getHeight();
        int WIDTH = super.getWidth();
        //设置窗体大小
        super.setLocation(screenSize.width / 2 - WIDTH / 2, screenSize.height / 2 - HEIGHT / 2);
        Dimension framesize = new Dimension(WIDTH, HEIGHT);
        super.setMinimumSize(framesize);

        //加载设置
        PM = new PropertyManage(jTable1, David2Printer.this);
        PM.loadProperty(System.getProperty("user.dir") + "\\David2Printer.properties");
        PM.getMyTablemodel().refreshData();

        //设置串口
        manSerial = new managerSerial(DavidSerialjComboBox, PrinterSerialjComboBox, PortRatejComboBox, this);
        manSerial.transmitMessage();//开始转发进程

        //初始化单例信息窗口
        instance = messagePrinter.getInstance();
        //设置一个jTextAreal给单例的信息打印窗口
        messagePrinter.setJTextArea(jTextArea1);

        stepsjComboBox.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                David_3_10_4.setMaxLocation(Long.parseLong((String) stepsjComboBox.getSelectedItem()));
            }
        });

        AngelsjComboBox.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                David_3_10_4.setScanAngle(Integer.parseInt((String) AngelsjComboBox.getSelectedItem()));
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        managePropertied = new javax.swing.JPopupMenu();
        addMenuItem = new javax.swing.JMenuItem();
        deleteMemuItem = new javax.swing.JMenuItem();
        sendCmdToPrinter = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        PortRatejComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        DavidSerialjComboBox = new javax.swing.JComboBox();
        OpenDavidSerialjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        PrinterSerialjComboBox = new javax.swing.JComboBox();
        OpenPrinterSerialjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        stepsjComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        AngelsjComboBox = new javax.swing.JComboBox();
        reachTheEndjButton = new javax.swing.JButton();
        AutoScanButton = new javax.swing.JButton();
        ResetjButton = new javax.swing.JButton();
        EmergencyStopjButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        D2PjMenuBar = new javax.swing.JMenuBar();
        FilejMenu = new javax.swing.JMenu();
        LoadPropertyies = new javax.swing.JMenuItem();
        SavePropertis = new javax.swing.JMenuItem();
        CloseItem = new javax.swing.JMenuItem();
        AboutjMenu = new javax.swing.JMenu();

        addMenuItem.setText("添加");
        addMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMenuItemActionPerformed(evt);
            }
        });
        managePropertied.add(addMenuItem);

        deleteMemuItem.setText("删除");
        deleteMemuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMemuItemActionPerformed(evt);
            }
        });
        managePropertied.add(deleteMemuItem);

        sendCmdToPrinter.setText("发送命令");
        sendCmdToPrinter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendCmdToPrinterActionPerformed(evt);
            }
        });
        managePropertied.add(sendCmdToPrinter);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("David2Printer");
        setMinimumSize(new java.awt.Dimension(551, 451));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("指令转换表"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "David指令", "打印机指令"
            }
        ));
        jTable1.setCellSelectionEnabled(true);
        jTable1.setComponentPopupMenu(managePropertied);
        jTable1.setEditingColumn(1);
        jTable1.setEditingRow(1);
        jTable1.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("用户操作"));
        jPanel1.setMinimumSize(new java.awt.Dimension(109, 430));
        jPanel1.setLayout(new java.awt.GridLayout(0, 1, 2, 3));

        jLabel3.setText("波特率：");
        jPanel1.add(jLabel3);

        PortRatejComboBox.setEditable(true);
        jPanel1.add(PortRatejComboBox);

        jLabel1.setText("DAVID 串口：");
        jPanel1.add(jLabel1);

        jPanel1.add(DavidSerialjComboBox);

        OpenDavidSerialjButton.setText("打开串口");
        OpenDavidSerialjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenDavidSerialjButtonActionPerformed(evt);
            }
        });
        jPanel1.add(OpenDavidSerialjButton);

        jLabel2.setText("Printer 串口：");
        jPanel1.add(jLabel2);

        jPanel1.add(PrinterSerialjComboBox);

        OpenPrinterSerialjButton.setText("打开串口");
        OpenPrinterSerialjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenPrinterSerialjButtonActionPerformed(evt);
            }
        });
        jPanel1.add(OpenPrinterSerialjButton);
        jPanel1.add(jSeparator1);

        jLabel4.setText("扫描范围（步数）：");
        jPanel1.add(jLabel4);

        stepsjComboBox.setEditable(true);
        stepsjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "500", "1000", "2000", "3000", "4000", "5000", "6000", "7000", "8000", "9000", "10000", "11000", "12000", "13000", "14000", "15000", "16000", "17000", "18000", "20000", "21000", "22000", "23000", "24000", "25000", "26000", "27000", "28000", "29000", "30000" }));
        stepsjComboBox.setSelectedItem(20000);
        jPanel1.add(stepsjComboBox);

        jLabel5.setText("单次扫描角度：");
        jPanel1.add(jLabel5);

        AngelsjComboBox.setEditable(true);
        AngelsjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", " " }));
        AngelsjComboBox.setSelectedItem(30);
        jPanel1.add(AngelsjComboBox);

        reachTheEndjButton.setBackground(new java.awt.Color(255, 255, 255));
        reachTheEndjButton.setText("到扫描终点");
        reachTheEndjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reachTheEndjButtonActionPerformed(evt);
            }
        });
        jPanel1.add(reachTheEndjButton);

        AutoScanButton.setBackground(new java.awt.Color(0, 255, 0));
        AutoScanButton.setText("开始自动扫描");
        AutoScanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutoScanButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AutoScanButton);

        ResetjButton.setBackground(new java.awt.Color(255, 255, 102));
        ResetjButton.setText("复位");
        ResetjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetjButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ResetjButton);

        EmergencyStopjButton.setBackground(new java.awt.Color(255, 0, 51));
        EmergencyStopjButton.setText("急停");
        EmergencyStopjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmergencyStopjButtonActionPerformed(evt);
            }
        });
        jPanel1.add(EmergencyStopjButton);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("状态及命令"));
        jScrollPane2.setToolTipText("");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        D2PjMenuBar.setFont(new java.awt.Font("宋体", 0, 12)); // NOI18N

        FilejMenu.setText("文件");
        FilejMenu.setFont(new java.awt.Font("宋体", 0, 12)); // NOI18N

        LoadPropertyies.setFont(new java.awt.Font("宋体", 0, 12)); // NOI18N
        LoadPropertyies.setText("加载");
        LoadPropertyies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadPropertyiesActionPerformed(evt);
            }
        });
        FilejMenu.add(LoadPropertyies);

        SavePropertis.setFont(new java.awt.Font("宋体", 0, 12)); // NOI18N
        SavePropertis.setText("保存");
        SavePropertis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePropertisActionPerformed(evt);
            }
        });
        FilejMenu.add(SavePropertis);

        CloseItem.setFont(new java.awt.Font("宋体", 0, 12)); // NOI18N
        CloseItem.setText("关闭");
        CloseItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseItemActionPerformed(evt);
            }
        });
        FilejMenu.add(CloseItem);

        D2PjMenuBar.add(FilejMenu);

        AboutjMenu.setText("关于");
        AboutjMenu.setFont(new java.awt.Font("宋体", 0, 12)); // NOI18N
        D2PjMenuBar.add(AboutjMenu);

        setJMenuBar(D2PjMenuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .add(jScrollPane2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadPropertyiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadPropertyiesActionPerformed
        PM.openProperty();
    }//GEN-LAST:event_LoadPropertyiesActionPerformed

    private void CloseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseItemActionPerformed
        // TODO add your handling code here:
        manSerial.closeDavidSerial();
        manSerial.closePrinterSerial();
        System.exit(0);
    }//GEN-LAST:event_CloseItemActionPerformed

    private void SavePropertisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePropertisActionPerformed
        // TODO add your handling code here:
        PM.saveProperty();
    }//GEN-LAST:event_SavePropertisActionPerformed

    private void addMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMenuItemActionPerformed
        // TODO add your handling code here:
        PM.addAProperty();
    }//GEN-LAST:event_addMenuItemActionPerformed

    private void deleteMemuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMemuItemActionPerformed
        // TODO add your handling code here:
        PM.deletePreperty();
    }//GEN-LAST:event_deleteMemuItemActionPerformed

    private void OpenDavidSerialjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenDavidSerialjButtonActionPerformed
        // TODO add your handling code here:
        if (OpenDavidSerialjButton.getText().equals("打开串口")) {
            boolean isOpen = manSerial.openDavidSerial();
            if (isOpen) {
                messagePrinter.addMessage("David串口打开成功", "状态提示");
                OpenDavidSerialjButton.setText("关闭串口");

            }
        } else {
            manSerial.closeDavidSerial();
            OpenDavidSerialjButton.setText("打开串口");
            messagePrinter.addMessage("David连接断开", "状态提示");
        }
    }//GEN-LAST:event_OpenDavidSerialjButtonActionPerformed

    private void OpenPrinterSerialjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenPrinterSerialjButtonActionPerformed
        // TODO add your handling code here:
        if (OpenPrinterSerialjButton.getText().equals("打开串口")) {
            boolean isOpen = manSerial.openPrinterSerial();
            if (isOpen) {
                messagePrinter.addMessage("Printer串口打开成功", "状态提示");
                OpenPrinterSerialjButton.setText("关闭串口");
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(David2Printer.class.getName()).log(Level.SEVERE, null, ex);
                }
                manSerial.SendMessageToPrinter("G28");
            }
        } else {
            manSerial.closePrinterSerial();
            OpenPrinterSerialjButton.setText("打开串口");
            messagePrinter.addMessage("Printer连接断开", "状态提示");
        }
    }//GEN-LAST:event_OpenPrinterSerialjButtonActionPerformed

    private void EmergencyStopjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmergencyStopjButtonActionPerformed
        // TODO add your handling code here:
        manSerial.closeDavidSerial();
        manSerial.closePrinterSerial();
        OpenPrinterSerialjButton.setText("打开串口");
        OpenDavidSerialjButton.setText("打开串口");
        David_3_10_4.initScanTime();
        David_3_10_4.AutoScanControl.setCurrentState(David_3_10_4.AutoScanControl.STATE_STOP);
    }//GEN-LAST:event_EmergencyStopjButtonActionPerformed

    private void AutoScanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutoScanButtonActionPerformed
        // TODO add your handling code here:
        AutoScanButton.setEnabled(false);
        stepsjComboBox.setEditable(false);
        AngelsjComboBox.setEditable(false);
        reachTheEndjButton.setEnabled(false);
        manSerial.setIsAutoRun(true);
        David_3_10_4.AutoScanControl.setCurrentState(David_3_10_4.AutoScanControl.STATE_PREPARE);
        David_3_10_4.AutoScanControl.startScan();
    }//GEN-LAST:event_AutoScanButtonActionPerformed

    private void ResetjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetjButtonActionPerformed
        // TODO add your handling code here:
        AutoScanButton.setEnabled(true);
        stepsjComboBox.setEditable(true);
        AngelsjComboBox.setEditable(true);
        reachTheEndjButton.setEnabled(true);
        manSerial.setIsAutoRun(false);

        David_3_10_4.initScanTime();

        David_3_10_4.AutoScanControl.setCurrentState(David_3_10_4.AutoScanControl.STATE_STOP);
        David_3_10_4.setScanAngle(Integer.parseInt((String) AngelsjComboBox.getSelectedItem()));
        David_3_10_4.setMaxLocation(Long.parseLong((String) stepsjComboBox.getSelectedItem()));
        David_3_10_4.initThePosition(2000);
    }//GEN-LAST:event_ResetjButtonActionPerformed

    private void reachTheEndjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reachTheEndjButtonActionPerformed
        // TODO add your handling code here:
        David_3_10_4.moveToMaxPointAndBack(2000);
    }//GEN-LAST:event_reachTheEndjButtonActionPerformed

    private void sendCmdToPrinterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendCmdToPrinterActionPerformed
        // TODO add your handling code here:
        String cmdString = PM.getCmd();
        if (cmdString != "") {
            manSerial.SendMessageToPrinter(cmdString);
        }
    }//GEN-LAST:event_sendCmdToPrinterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu AboutjMenu;
    private javax.swing.JComboBox AngelsjComboBox;
    private javax.swing.JButton AutoScanButton;
    private javax.swing.JMenuItem CloseItem;
    private javax.swing.JMenuBar D2PjMenuBar;
    private javax.swing.JComboBox DavidSerialjComboBox;
    private javax.swing.JButton EmergencyStopjButton;
    private javax.swing.JMenu FilejMenu;
    private javax.swing.JMenuItem LoadPropertyies;
    private javax.swing.JButton OpenDavidSerialjButton;
    private javax.swing.JButton OpenPrinterSerialjButton;
    private javax.swing.JComboBox PortRatejComboBox;
    private javax.swing.JComboBox PrinterSerialjComboBox;
    private javax.swing.JButton ResetjButton;
    private javax.swing.JMenuItem SavePropertis;
    private javax.swing.JMenuItem addMenuItem;
    private javax.swing.JMenuItem deleteMemuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPopupMenu managePropertied;
    private javax.swing.JButton reachTheEndjButton;
    private javax.swing.JMenuItem sendCmdToPrinter;
    private javax.swing.JComboBox stepsjComboBox;
    // End of variables declaration//GEN-END:variables
}
